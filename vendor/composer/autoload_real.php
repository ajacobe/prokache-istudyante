<?php

// autoload_real.php generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInitc62c79e2e5c06ef1536ed6195fb1a122
=======
class ComposerAutoloaderInite3f5acf96d2ae66df74c4805c906a9e5
>>>>>>> b9a8876f7e0128c0f81ce04dfeadc0bfdd01ebab
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInitc62c79e2e5c06ef1536ed6195fb1a122', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitc62c79e2e5c06ef1536ed6195fb1a122', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInite3f5acf96d2ae66df74c4805c906a9e5', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInite3f5acf96d2ae66df74c4805c906a9e5', 'loadClassLoader'));
>>>>>>> b9a8876f7e0128c0f81ce04dfeadc0bfdd01ebab

        $vendorDir = dirname(__DIR__);
        $baseDir = dirname($vendorDir);

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->add($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
        }

        $loader->register(true);

        require $vendorDir . '/kriswallsmith/assetic/src/functions.php';
        require $vendorDir . '/swiftmailer/swiftmailer/lib/swift_required.php';

        return $loader;
    }
}
