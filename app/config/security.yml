jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
					
		admin_user_provider:
			id: services.admin_user_provider

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

		admin_user.login:
		    pattern: ^/admin/login$
			security: false
		
		admin_secured_area:
			pattern: ^/admin
			access_denied_url: /admin/access-denied
			provider: admin_user_provider
			form_login:
				login_path: /admin/login
				check_path: /admin/login-check
				always_use_default_target_path: false
				default_target_path: /admin/dashboard
				remember_me: false
				failure_path: /admin/login
			
			logout:
				path: /admin/logout
				target: /admin/login
			
		
        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    ^/demo/secured/
            form_login:
                check_path: _security_check
                login_path: _demo_login
            logout:
                path:   _demo_logout
                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
		- { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
		- { path: ^/admin, roles: [ ROLE_ADMIN, IS_AUTHENTICATED_REMEMBERED, IS_AUTHENTICATED_FULLY] }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
